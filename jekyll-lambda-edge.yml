---
AWSTemplateFormatVersion: '2010-09-09'
#Parameters:
  #LambdaEdgeFunctionName:
  #  Type: String
  #  Default: cloudfront-simple-urls

Resources:
  LambdaEdgePolicy:
    Type: AWS::IAM::Policy
    Properties: 
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - logs:CreateLogGroup
          - logs:CreateLogStream
          - logs:PutLogEvents
          Resource:
          - arn:aws:logs:*:*:*
      PolicyName: !Sub '${AWS::StackName}-policy'
      Roles: 
        - !Ref LambdaEdgeRole
  #!Ref LambdaEdgePolicy #returns policy name
      
  LambdaEdgeRole:
    Type: AWS::IAM::Role
    Properties: 
      RoleName: !Sub '${AWS::StackName}-role'
      AssumeRolePolicyDocument: 
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
            - edgelambda.amazonaws.com
          Action: sts:AssumeRole
      Description: A role to support the custom Lambda@Edge function for simple URLs from CloudFront Distribution
  #!Ref LambdaEdgeRole #(role name)
  #!GetAtt [LambdaEdgeRole , Arn]
  #!GetAtt [LambdaEdgeRole , RoleId]

  LambdaEdgeFunction:
    Type: AWS::Lambda::Function
    Properties: 
      Description: A custom Lambda@Edge function for simple URLs from CloudFront Distribution
      FunctionName: !Sub '${AWS::StackName}-lambda'
      Handler: index.handler
      Role: !GetAtt [LambdaEdgeRole , Arn]
      Runtime: nodejs10.x
      Code: 
        ZipFile: !Sub |
            'use strict';
              exports.handler = (event, context, callback) => {
                  
                  // Extract the request from the CloudFront event that is sent to Lambda@Edge 
                  var request = event.Records[0].cf.request;

                  // Extract the URI from the request
                  var olduri = request.uri;

                  // Match any '/' that occurs at the end of a URI. Replace it with a default index
                  var newuri = olduri.replace(/\/$/, '\/index.html');
                  
                  // Log the URI as received by CloudFront and the new URI to be used to fetch from origin
                  console.log('Old URI: ' + olduri);
                  console.log('New URI: ' + newuri);
                  
                  // Replace the received URI with the URI that includes the index page
                  request.uri = newuri;
                  
                  // Return to CloudFront
                  return callback(null, request);

            };
  #!Ref LambdaEdgeFunction #(function name)
  #!GetAtt [LambdaEdgeFunction, Arn]

  LambdaEdgeFunctionVersion:
    Type: AWS::Lambda::Version
    Properties: 
      FunctionName: !GetAtt [LambdaEdgeFunction, Arn]
  #!Ref LambdaEdgeFunctionVersion #(function version arn)
  #!GetAtt [LambdaEdgeFunctionVersion, Version]

Outputs:
  LambdaEdgeFunctionARN:
    Value: !Ref LambdaEdgeFunctionVersion
    Export:
      Name: !Sub ${AWS::StackName}-LambdaEdgeFunctionARN
